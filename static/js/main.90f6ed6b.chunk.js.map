{"version":3,"sources":["components/Navbar/Navbar.tsx","components/Pages/HomePage.tsx","components/Pages/NotFoundPage.tsx","components/Loader/Loader.tsx","components/PeopleTable/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","components/Pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Navbar","className","role","isActive","cn","to","HomePage","NotFoundPage","Loader","PersonLink","person","name","slug","sex","PeopleTable","selectedPersonSlug","people","map","born","died","motherName","fatherName","isSelected","mother","find","parent","father","personMotherName","personFatherName","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","loadingHasError","setLoadingHasError","isLoading","setIsLoading","useParams","personSlug","isTableVisible","Boolean","length","getPeopleFromServer","useCallback","peopleFromServer","useEffect","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.90f6ed6b.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => cn('navbar-item', {\n            'has-background-grey-lighter': isActive,\n          })}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={({ isActive }) => cn('navbar-item', {\n            'has-background-grey-lighter': isActive,\n          })}\n          to=\"people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">\n    Home Page\n  </h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, slug } = person;\n\n  return (\n    <Link\n      className={cn({\n        'has-text-danger': person.sex === 'f',\n      })}\n      to={`/people/${slug}`}\n      // to={`../${slug}`}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { Person } from '../../types/Person';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  selectedPersonSlug: string;\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  selectedPersonSlug,\n  people,\n}) => (\n  <table\n    data-cy=\"peopleTable\"\n    className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n  >\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {people.map(person => {\n        const {\n          sex, born, died, motherName, fatherName, slug,\n        } = person;\n\n        const isSelected = slug === selectedPersonSlug;\n\n        const mother = people.find(parent => parent.name === motherName);\n        const father = people.find(parent => parent.name === fatherName);\n        const personMotherName = motherName || '-';\n        const personFatherName = fatherName || '-';\n\n        return (\n          <tr\n            data-cy=\"person\"\n            key={slug}\n            className={cn({\n              'has-background-warning': isSelected,\n            })}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{sex}</td>\n            <td>{born}</td>\n            <td>{died}</td>\n            <td>\n              {!mother ? personMotherName : <PersonLink person={mother} />}\n            </td>\n            <td>\n              {!father ? personFatherName : <PersonLink person={father} />}\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\nimport { getPeople } from '../../api';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loadingHasError, setLoadingHasError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { personSlug = '' } = useParams();\n\n  const isTableVisible = Boolean(people.length && !loadingHasError);\n\n  const getPeopleFromServer = useCallback(async () => {\n    setLoadingHasError(false);\n    setIsLoading(true);\n\n    try {\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer);\n    } catch (error) {\n      setLoadingHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {loadingHasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!people.length && !loadingHasError && !isLoading && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isTableVisible && (\n            <PeopleTable selectedPersonSlug={personSlug} people={people} />\n          )}\n\n        </div>\n      </div>\n    </div>\n  );\n};\n","import {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\n\nimport './App.scss';\n\nimport { Navbar } from './components/Navbar/Navbar';\nimport { HomePage } from './components/Pages/HomePage';\nimport { NotFoundPage } from './components/Pages/NotFoundPage';\nimport { PeoplePage } from './components/Pages/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n        <Route path=\"people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":personSlug\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}